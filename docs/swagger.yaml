basePath: /
definitions:
  backends.Backend:
    properties:
      address:
        example: 127.0.0.1:80
        type: string
      site:
        $ref: '#/definitions/sites.Site'
    type: object
  credentials.Credentials:
    properties:
      login:
        example: someLogin
        type: string
      password:
        example: somePassword
        type: string
      site:
        $ref: '#/definitions/sites.Site'
    type: object
  models.SwagBackends:
    properties:
      address:
        example: 127.0.0.1:80
        type: string
      site_id:
        example: 1
        type: integer
    type: object
  models.SwagCredentials:
    properties:
      login:
        example: someLogin
        type: string
      password:
        example: somePassword
        type: string
      site_id:
        example: 1
        type: integer
    type: object
  sites.Site:
    properties:
      host:
        example: site.com
        type: string
      name:
        example: site
        type: string
    type: object
host: localhost:80
info:
  contact: {}
  description: How to work CRUD server in reverseProxy
  title: CRUD server in reverseProxy
  version: 1.0.0
paths:
  /backends:
    post:
      consumes:
      - application/json
      description: Create backends
      parameters:
      - description: backend info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SwagBackends'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "404":
          description: Not Found
          schema:
            type: string
      summary: Create new backends
      tags:
      - Backends
  /backends/{id}:
    delete:
      consumes:
      - application/json
      description: delete backends
      parameters:
      - description: backends ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backends.Backend'
        "404":
          description: Not Found
          schema:
            type: string
      summary: Delete backends based on given id
      tags:
      - Backends
    get:
      consumes:
      - application/json
      description: get backends
      parameters:
      - description: backends ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backends.Backend'
        "404":
          description: Not Found
          schema:
            type: string
      summary: Get backends based on given id
      tags:
      - Backends
    put:
      consumes:
      - application/json
      description: update backends
      parameters:
      - description: backends ID
        in: path
        name: id
        required: true
        type: integer
      - description: backends info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SwagBackends'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backends.Backend'
        "404":
          description: Not Found
          schema:
            type: string
      summary: Update backends based on given id
      tags:
      - Backends
  /credentials:
    post:
      consumes:
      - application/json
      description: Create credentials
      parameters:
      - description: credentials info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SwagCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "404":
          description: Not Found
          schema:
            type: string
      summary: Create new credentials
      tags:
      - Credentials
  /credentials/{id}:
    delete:
      consumes:
      - application/json
      description: delete credentials
      parameters:
      - description: credentials ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/credentials.Credentials'
        "404":
          description: Not Found
          schema:
            type: string
      summary: Delete credentials based on given id
      tags:
      - Credentials
    get:
      consumes:
      - application/json
      description: get credentials
      parameters:
      - description: credentials ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/credentials.Credentials'
        "404":
          description: Not Found
          schema:
            type: string
      summary: Get credentials based on given id
      tags:
      - Credentials
    put:
      consumes:
      - application/json
      description: update credentials
      parameters:
      - description: credential ID
        in: path
        name: id
        required: true
        type: integer
      - description: credentials info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SwagCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/credentials.Credentials'
        "404":
          description: Not Found
          schema:
            type: string
      summary: Update credentials based on given id
      tags:
      - Credentials
  /sites:
    post:
      consumes:
      - application/json
      description: Create site
      parameters:
      - description: site info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/sites.Site'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "404":
          description: Not Found
          schema:
            type: string
      summary: Create new site
      tags:
      - Sites
  /sites/{id}:
    delete:
      consumes:
      - application/json
      description: delete site
      parameters:
      - description: site ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sites.Site'
        "404":
          description: Not Found
          schema:
            type: string
      summary: Delete site based on given id
      tags:
      - Sites
    get:
      consumes:
      - application/json
      description: get site
      parameters:
      - description: site ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sites.Site'
        "404":
          description: Not Found
          schema:
            type: string
      summary: Get site based on given id
      tags:
      - Sites
    put:
      consumes:
      - application/json
      description: update site
      parameters:
      - description: site ID
        in: path
        name: id
        required: true
        type: integer
      - description: site info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/sites.Site'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sites.Site'
        "404":
          description: Not Found
          schema:
            type: string
      summary: Update site based on given id
      tags:
      - Sites
schemes:
- http
swagger: "2.0"
